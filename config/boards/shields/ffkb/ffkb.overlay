/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/matrix_transform.h>

/ {
    chosen {
        zmk,kscan = &kscan0;
        zmk,matrix_transform = &default_transform;
        zephyr,display = &oled;
    };

    // Left encoder
    encoder_1: encoder_1 {
        compatible = "alps,ec11";
        label = "Encoder 1";
        a-gpios = <&gpio1 2 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
        b-gpios = <&gpio1 1 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
        resolution = <4>;
        status = "okay";
    };

    // Right encoder
    encoder_2: encoder_2 {
        compatible = "alps,ec11";
        label = "Encoder 2";
        a-gpios = <&pro_micro 10 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
        b-gpios = <&gpio1 7 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
        resolution = <4>;
        status = "okay";
    };

    sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&encoder_1 &encoder_2>;
    };

    kscan0: kscan_0 {
        compatible = "zmk,kscan-gpio-matrix";
        label = "KSCAN";
        diode-direction = "col2row";

        col-gpios
            = <&pro_micro 9 GPIO_ACTIVE_HIGH> // col 0
            , <&pro_micro 8 GPIO_ACTIVE_HIGH> // col 1
            , <&pro_micro 7 GPIO_ACTIVE_HIGH> // col 2
            , <&pro_micro 6 GPIO_ACTIVE_HIGH>  // col 3
            , <&pro_micro 5 GPIO_ACTIVE_HIGH>  // col 4
            , <&pro_micro 4 GPIO_ACTIVE_HIGH>  // col 5
            , <&pro_micro 16 GPIO_ACTIVE_HIGH> // col 6
            , <&pro_micro 14 GPIO_ACTIVE_HIGH> // col 7
            ;

        row-gpios
            = <&pro_micro 0 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>  // row 0
            , <&pro_micro 21 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // row 1
            , <&pro_micro 20 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // row 2
            , <&pro_micro 19 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // row 3
            , <&pro_micro 18 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // row 4
            , <&pro_micro 15 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // row 5
            ;
    };

    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        columns = <8>;
        rows = <6>;

        map = <
             RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5)         RC(0,6) RC(0,7) RC(4,3) RC(3,4) RC(4,5) RC(3,7)
             RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5) RC(4,1) RC(1,6) RC(1,7) RC(3,2) RC(4,4) RC(3,5) RC(4,7)
             RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5)         RC(2,6) RC(2,7) RC(4,2) RC(3,3) RC(3,6) RC(4,6)
                             RC(5,1) RC(5,3) RC(5,4) RC(5,5)         RC(5,6) RC(5,7) RC(5,2) RC(5,0)
        >;
    };

    five_column_noencoder_transform: keymap_transform_1 {
        compatible = "zmk,matrix-transform";
        columns = <8>;
        rows = <6>;

        map = <
             RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5)         RC(0,6) RC(0,7) RC(4,3) RC(3,4) RC(4,5)
             RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5)         RC(1,6) RC(1,7) RC(3,2) RC(4,4) RC(3,5)
             RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5)         RC(2,6) RC(2,7) RC(4,2) RC(3,3) RC(3,6)
                             RC(5,3) RC(5,4) RC(5,5)         RC(5,6) RC(5,7) RC(5,2)
        >;
    };
};

&pro_micro_i2c {
    status = "okay";

    oled: ssd1306@3c {
        compatible = "solomon,ssd1306fb";
        reg = <0x3c>;
        label = "DISPLAY";
        width = <128>;
        height = <64>;
        segment-offset = <0>;
        page-offset = <0>;
        display-offset = <0>;
        multiplex-ratio = <63>;
        prechargep = <0x22>;
    };
};
